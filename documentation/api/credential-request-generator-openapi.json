{
  "openapi": "3.0.1",
  "info": {
    "title": "Credential Request Generator",
    "description": "Credential Request Generator",
    "license": {
      "name": "Mosip",
      "url": "https://docs.mosip.io/platform/license"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://dev.mosip.net/app/generic",
      "description": "Credential Request Generator"
    }
  ],
  "tags": [
    {
      "name": "Credential Request Generator",
      "description": "Credential Request Generator"
    }
  ],
  "paths": {
    "/retrigger/{requestId}": {
      "put": {
        "tags": [
          "Credential Request Generator"
        ],
        "summary": "retrigger the credential issuance request",
        "description": "retrigger the credential issuance request",
        "operationId": "reprocessCredentialRequest",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "retrigger the  the request successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialIssueResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unable to retrigger the request"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/requestgenerator": {
      "post": {
        "tags": [
          "Credential Request Generator"
        ],
        "summary": "Create the  credential issuance request",
        "description": "Create the  credential issuance request",
        "operationId": "credentialIssue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCredentialIssueRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Unable to get request id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Created request id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/getRequestIds": {
      "get": {
        "tags": [
          "Credential Request Generator"
        ],
        "summary": "get credential issuance request ids",
        "description": "get credential issuance request ids",
        "operationId": "getRequestIds",
        "parameters": [
          {
            "name": "statusCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "FAILED"
            }
          },
          {
            "name": "effectivedtimes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "upd_dtimes"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "get credential issuance request ids successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialRequestIdsDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unable to get credential issuance request ids"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/get/{requestId}": {
      "get": {
        "tags": [
          "Credential Request Generator"
        ],
        "summary": "get credential issuance request status",
        "description": "get credential issuance request status",
        "operationId": "getCredentialRequestStatus",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get the credential issuance status of request successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialIssueResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Unable to get the status of credential issuance request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cancel/{requestId}": {
      "get": {
        "tags": [
          "Credential Request Generator"
        ],
        "summary": "cancel the credential issuance request",
        "description": "cancel the credential issuance request",
        "operationId": "cancelCredentialRequest",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cancel the request successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialIssueResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "400": {
            "description": "Unable to cancel the request"
          }
        }
      }
    },
    "/callback/notifyStatus": {
      "post": {
        "tags": [
          "Credential Request Generator"
        ],
        "summary": "callback",
        "description": "callback",
        "operationId": "handleSubscribeEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialStatusEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperObject"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Unable to request callback"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "201": {
            "description": "Created"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CredentialIssueResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "CredentialIssueResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/CredentialIssueResponse"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDTO"
            }
          }
        }
      },
      "ErrorDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CredentialIssueRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "credentialType": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "recepiant": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "encrypt": {
            "type": "boolean"
          },
          "encryptionKey": {
            "type": "string"
          },
          "sharableAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additionalData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "RequestWrapperCredentialIssueRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CredentialIssueRequestDto"
          }
        }
      },
      "CredentialRequestIdsDto": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "credentialType": {
            "type": "string"
          },
          "partner": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "statusComment": {
            "type": "string"
          },
          "createDateTime": {
            "type": "string"
          },
          "updateDateTime": {
            "type": "string"
          }
        }
      },
      "CredentialStatusEvent": {
        "type": "object",
        "properties": {
          "publisher": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "publishedOn": {
            "type": "string"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperObject": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "type": "object"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ServiceError": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
