{
  "openapi": "3.0.1",
  "info": {
    "title": "Key Manager Service",
    "description": "Rest Endpoints for operations related to key management and crypto operations",
    "license": {
      "name": "Mosip",
      "url": "https://docs.mosip.io/platform/license"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://dev2.mosip.net/v1/keymanager",
      "description": "Key Manager Service"
    }
  ],
  "tags": [
    {
      "name": "signaturecontroller",
      "description": "Operation related to signature"
    },
    {
      "name": "tokenidgenerator",
      "description": "Operation related to tokenid generator"
    },
    {
      "name": "clientcrypto",
      "description": "Operation related to offline Encryption and Decryption"
    },
    {
      "name": "cryptomanager",
      "description": "Operation related to Encryption and Decryption"
    },
    {
      "name": "zkcryptomanager",
      "description": "Operation related to Zero Knowledge Encryption and Decryption"
    },
    {
      "name": "keymanager",
      "description": "Operation related to Keymanagement"
    },
    {
      "name": "partnercertmanager",
      "description": "Operation related to partner certificate management"
    },
    {
      "name": "keymigrator",
      "description": "Operation related to Key Migration from one HSM to another HSM"
    },
    {
      "name": "licensekey",
      "description": "Operation related to License Key Management"
    }
  ],
  "paths": {
    "/zkReEncryptRandomKey": {
      "post": {
        "tags": [
          "zkcryptomanager"
        ],
        "summary": "Endpoint for Decrypt the data",
        "description": "Endpoint for Decrypt the data",
        "operationId": "zkReEncryptRandomKey",
        "parameters": [
          {
            "name": "encryptedKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperReEncryptRandomKeyResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/zkEncrypt": {
      "post": {
        "tags": [
          "zkcryptomanager"
        ],
        "summary": "Endpoint for Encrypt the data",
        "description": "Endpoint for Encrypt the data",
        "operationId": "zkEncrypt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperZKCryptoRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperZKCryptoResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/zkDecrypt": {
      "post": {
        "tags": [
          "zkcryptomanager"
        ],
        "summary": "Endpoint for Decrypt the data",
        "description": "Endpoint for Decrypt the data",
        "operationId": "zkDecrypt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperZKCryptoRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperZKCryptoResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/verifyCertificateTrust": {
      "post": {
        "tags": [
          "partnercertmanager"
        ],
        "summary": "To Upload Partner Certificate",
        "description": "To Upload Partner Certificate",
        "operationId": "verifyCertificateTrust",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCertificateTrustRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCertificateTrustResponeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/validate": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to validate signature",
        "description": "Function to validate signature",
        "operationId": "validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperTimestampRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperValidatorResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/uploadPartnerCertificate": {
      "post": {
        "tags": [
          "partnercertmanager"
        ],
        "summary": "To Upload Partner Certificate",
        "description": "To Upload Partner Certificate",
        "operationId": "uploadPartnerCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperPartnerCertificateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperPartnerCertificateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/uploadOtherDomainCertificate": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Update signed certificate for the provided APP ID & REF ID for other domains",
        "description": "Update signed certificate for the provided APP ID & REF ID for other domains",
        "operationId": "uploadOtherDomainCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUploadCertificateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperUploadCertificateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/uploadCertificate": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Update signed certificate for the provided APP ID & REF ID",
        "description": "Update signed certificate for the provided APP ID & REF ID",
        "operationId": "uploadCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUploadCertificateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperUploadCertificateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/uploadCACertificate": {
      "post": {
        "tags": [
          "partnercertmanager"
        ],
        "summary": "To Upload CA/Sub-CA certificates",
        "description": "To Upload CA/Sub-CA certificates",
        "operationId": "uploadCACertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCACertificateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCACertificateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tpmsigning/publickey": {
      "post": {
        "tags": [
          "clientcrypto"
        ],
        "summary": "Get signinging public key",
        "description": "Get signinging public key",
        "operationId": "getSigningPublicKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperPublicKeyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperPublicKeyResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tpmencryption/publickey": {
      "post": {
        "tags": [
          "clientcrypto"
        ],
        "summary": "Get encryption public key",
        "description": "Get encryption public key",
        "operationId": "getEncPublicKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperPublicKeyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperPublicKeyResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tpmencrypt": {
      "post": {
        "tags": [
          "clientcrypto"
        ],
        "summary": "Encrypt data using tpm",
        "description": "Encrypt data using tpm",
        "operationId": "tpmEncrypt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperTpmCryptoRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperTpmCryptoResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tpmdecrypt": {
      "post": {
        "tags": [
          "clientcrypto"
        ],
        "summary": "Decrypt data using tpm",
        "description": "Decrypt data using tpm",
        "operationId": "tpmDecrypt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperTpmCryptoRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperTpmCryptoResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tokenid/{uin}/{partnercode}": {
      "get": {
        "tags": [
          "tokenidgenerator"
        ],
        "summary": "Function to generate token id",
        "description": "Function to generate token id",
        "operationId": "generateTokenID",
        "parameters": [
          {
            "name": "uin",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partnercode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperTokenIDResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sign": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to sign response",
        "description": "Function to sign response",
        "operationId": "sign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperSignRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperSignResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/revokeKey": {
      "put": {
        "tags": [
          "keymanager"
        ],
        "summary": "Request to Revoke Base Key for the provided APP ID & REF ID",
        "description": "Request to Revoke Base Key for the provided APP ID & REF ID",
        "operationId": "revokeKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperRevokeKeyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperRevokeKeyResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pdf/sign": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to sign PDF",
        "description": "Function to sign PDF",
        "operationId": "signPDF",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperPDFSignatureRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperSignatureResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/migrateZKKeys": {
      "post": {
        "tags": [
          "keymigrator"
        ],
        "summary": "Controller for migrating ZK keys",
        "description": "Controller for migrating ZK keys",
        "operationId": "migrateZKKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperZKKeyMigrateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperZKKeyMigrateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/migrateBaseKey": {
      "post": {
        "tags": [
          "keymigrator"
        ],
        "summary": "Controller for migrating base key",
        "description": "Controller for migrating base key",
        "operationId": "migrateBaseKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperKeyMigrateBaseKeyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperKeyMigrateBaseKeyResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/license/permission": {
      "get": {
        "tags": [
          "licensekey"
        ],
        "summary": "This method will fetch the mapped permissions for a license key",
        "description": "Endpoint for Encrypt the data",
        "operationId": "fetchLicenseKeyPermissions",
        "parameters": [
          {
            "name": "tspId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licenseKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperLicenseKeyFetchResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "licensekey"
        ],
        "summary": "This method will map license key to several permissions. The permissions provided must be present in the master list",
        "description": "Endpoint for Encrypt the data",
        "operationId": "mapLicenseKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperLicenseKeyMappingDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperLicenseKeyMappingResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/license/generate": {
      "post": {
        "tags": [
          "licensekey"
        ],
        "summary": "This method will generate license key against a certain TSP ID",
        "description": "Endpoint for Encrypt the data",
        "operationId": "generateLicenseKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperLicenseKeyGenerationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperLicenseKeyGenerationResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/jwtVerify": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to JWT Signature verification",
        "description": "Function to JWT Signature verification",
        "operationId": "jwtVerify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperJWTSignatureVerifyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperJWTSignatureVerifyResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/jwtSign": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "TFunction to JWT sign datas",
        "description": "Function to JWT sign data",
        "operationId": "jwtSign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperJWTSignatureRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperJWTSignatureResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/jwsSign": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to do JSON Web Signature(JWS) for the inputted data using inputted algorithm. Default Algorithm PS256.",
        "description": "Function to JWT sign data",
        "operationId": "jwsSign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperJWSSignatureRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperJWTSignatureResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/getZKTempCertificate": {
      "get": {
        "tags": [
          "keymigrator"
        ],
        "summary": "Controller to get the certificate for migrating ZK keys",
        "description": "Controller to get the certificate for migrating ZK keys",
        "operationId": "getZKTempCertificate",
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperZKKeyMigrateCertficateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/getPartnerCertificate/{partnerCertId}": {
      "get": {
        "tags": [
          "partnercertmanager"
        ],
        "summary": "To Download Partner Certificate",
        "description": "To Download Partner Certificate",
        "operationId": "getPartnerCertificate",
        "parameters": [
          {
            "name": "partnerCertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperPartnerCertDownloadResponeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/getCertificate": {
      "get": {
        "tags": [
          "keymanager"
        ],
        "summary": "Request to get Certificate for the Provided APP ID & REF ID",
        "description": "Request to get Certificate for the Provided APP ID & REF ID",
        "operationId": "getCertificate",
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referenceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/generateSymmetricKey": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Request to Generate Symmetric key for the provided APP ID & REF ID",
        "description": "Request to Generate Symmetric key for the provided APP ID & REF ID",
        "operationId": "generateSymmetricKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperSymmetricKeyGenerateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperSymmetricKeyGenerateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/generateMasterKey/{objectType}": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Generate Master Key for the provided APP ID",
        "description": "Generate Master Key for the provided APP ID",
        "operationId": "generateMasterKey",
        "parameters": [
          {
            "name": "objectType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperKeyPairGenerateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/generateCSR": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Request to Generate CSR for the provided APP ID & REF ID along with other certificate params",
        "description": "Request to Generate CSR for the provided APP ID & REF ID along with other certificate params",
        "operationId": "generateCSR",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCSRGenerateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/encrypt": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Encrypt the data",
        "description": "Encrypt the data",
        "operationId": "encrypt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptomanagerRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptomanagerResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/encryptWithPin": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Encrypt the data with pin",
        "description": "Encrypt the data with pin",
        "operationId": "encryptWithPin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptoWithPinRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptoWithPinResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/encryptDt": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Encrypt the data & encrypt hash of the data with same session key",
        "description": "Encrypt the data & encrypt hash of the data with same session key",
        "operationId": "encryptDt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptomanagerRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptomanagerResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/decrypt": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Decrypt the data",
        "description": "Decrypt the data",
        "operationId": "decrypt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptomanagerRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptomanagerResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/decryptWithPin": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Decrypt the data with pin",
        "description": "Decrypt the data with pin",
        "operationId": "decryptWithPin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptoWithPinRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptoWithPinResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/decryptDt": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Decrypt the data & encrypt hash of the data with same session key",
        "description": "Decrypt the data & encrypt hash of the data with same session key",
        "operationId": "decryptDt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptomanagerRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptomanagerResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/csverifysign": {
      "post": {
        "tags": [
          "clientcrypto"
        ],
        "summary": "Verify signature",
        "description": "Verify signature",
        "operationId": "verifySignature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperTpmSignVerifyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperTpmSignVerifyResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cssign": {
      "post": {
        "tags": [
          "clientcrypto"
        ],
        "summary": "Sign data using tpm",
        "description": "Sign data using tpm",
        "operationId": "signData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperTpmSignRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperTpmSignResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ReEncryptRandomKeyResponseDto": {
        "type": "object",
        "properties": {
          "encryptedKey": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperReEncryptRandomKeyResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/ReEncryptRandomKeyResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ServiceError": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CryptoDataDto": {
        "required": [
          "identifier",
          "value"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "RequestWrapperZKCryptoRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/ZKCryptoRequestDto"
          }
        }
      },
      "ZKCryptoRequestDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "zkDataAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptoDataDto"
            }
          }
        }
      },
      "ResponseWrapperZKCryptoResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/ZKCryptoResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ZKCryptoResponseDto": {
        "type": "object",
        "properties": {
          "zkDataAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptoDataDto"
            }
          },
          "encryptedRandomKey": {
            "type": "string"
          },
          "rankomKeyIndex": {
            "type": "string"
          }
        }
      },
      "CertificateTrustRequestDto": {
        "required": [
          "certificateData",
          "partnerDomain"
        ],
        "type": "object",
        "properties": {
          "certificateData": {
            "type": "string"
          },
          "partnerDomain": {
            "type": "string"
          }
        }
      },
      "RequestWrapperCertificateTrustRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CertificateTrustRequestDto"
          }
        }
      },
      "CertificateTrustResponeDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "ResponseWrapperCertificateTrustResponeDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/CertificateTrustResponeDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RequestWrapperTimestampRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/TimestampRequestDto"
          }
        }
      },
      "TimestampRequestDto": {
        "required": [
          "data",
          "signature",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "signature": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperValidatorResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/ValidatorResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ValidatorResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PartnerCertificateRequestDto": {
        "required": [
          "certificateData",
          "organizationName",
          "partnerDomain"
        ],
        "type": "object",
        "properties": {
          "certificateData": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "partnerDomain": {
            "type": "string"
          }
        }
      },
      "RequestWrapperPartnerCertificateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/PartnerCertificateRequestDto"
          }
        }
      },
      "PartnerCertificateResponseDto": {
        "type": "object",
        "properties": {
          "signedCertificateData": {
            "type": "string"
          },
          "certificateId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperPartnerCertificateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/PartnerCertificateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RequestWrapperUploadCertificateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/UploadCertificateRequestDto"
          }
        }
      },
      "UploadCertificateRequestDto": {
        "required": [
          "applicationId",
          "certificateData"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "certificateData": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperUploadCertificateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/UploadCertificateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "UploadCertificateResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CACertificateRequestDto": {
        "required": [
          "certificateData",
          "partnerDomain"
        ],
        "type": "object",
        "properties": {
          "certificateData": {
            "type": "string"
          },
          "partnerDomain": {
            "type": "string"
          }
        }
      },
      "RequestWrapperCACertificateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CACertificateRequestDto"
          }
        }
      },
      "CACertificateResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperCACertificateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/CACertificateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "PublicKeyRequestDto": {
        "required": [
          "serverProfile"
        ],
        "type": "object",
        "properties": {
          "serverProfile": {
            "type": "string"
          }
        }
      },
      "RequestWrapperPublicKeyRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/PublicKeyRequestDto"
          }
        }
      },
      "PublicKeyResponseDto": {
        "type": "object",
        "properties": {
          "publicKey": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperPublicKeyResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/PublicKeyResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RequestWrapperTpmCryptoRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/TpmCryptoRequestDto"
          }
        }
      },
      "TpmCryptoRequestDto": {
        "required": [
          "publicKey",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "tpm": {
            "type": "boolean"
          }
        }
      },
      "ResponseWrapperTpmCryptoResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/TpmCryptoResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "TpmCryptoResponseDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperTokenIDResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/TokenIDResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "TokenIDResponseDto": {
        "type": "object",
        "properties": {
          "tokenID": {
            "type": "string"
          }
        }
      },
      "RequestWrapperSignRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/SignRequestDto"
          }
        }
      },
      "SignRequestDto": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperSignResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/SignResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "SignResponseDto": {
        "type": "object",
        "properties": {
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RequestWrapperRevokeKeyRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/RevokeKeyRequestDto"
          }
        }
      },
      "RevokeKeyRequestDto": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "disableAutoGen": {
            "type": "boolean"
          }
        }
      },
      "ResponseWrapperRevokeKeyResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/RevokeKeyResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RevokeKeyResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PDFSignatureRequestDto": {
        "required": [
          "applicationId",
          "data",
          "reason",
          "timeStamp"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "lowerLeftX": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "lowerLeftY": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "upperRightX": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "upperRightY": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RequestWrapperPDFSignatureRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/PDFSignatureRequestDto"
          }
        }
      },
      "ResponseWrapperSignatureResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/SignatureResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "SignatureResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "RequestWrapperZKKeyMigrateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/ZKKeyMigrateRequestDto"
          }
        }
      },
      "ZKKeyDataDto": {
        "required": [
          "encryptedKeyData",
          "keyIndex"
        ],
        "type": "object",
        "properties": {
          "keyIndex": {
            "type": "integer",
            "format": "int32"
          },
          "encryptedKeyData": {
            "type": "string"
          }
        }
      },
      "ZKKeyMigrateRequestDto": {
        "type": "object",
        "properties": {
          "zkEncryptedDataList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZKKeyDataDto"
            }
          },
          "purgeTempKeyFlag": {
            "type": "boolean"
          }
        }
      },
      "ResponseWrapperZKKeyMigrateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/ZKKeyMigrateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ZKKeyMigrateResponseDto": {
        "type": "object",
        "properties": {
          "zkEncryptedDataList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZKKeyResponseDto"
            }
          }
        }
      },
      "ZKKeyResponseDto": {
        "required": [
          "keyIndex",
          "statusMessage"
        ],
        "type": "object",
        "properties": {
          "keyIndex": {
            "type": "integer",
            "format": "int32"
          },
          "statusMessage": {
            "type": "string"
          }
        }
      },
      "KeyMigrateBaseKeyRequestDto": {
        "required": [
          "applicationId",
          "certificateData",
          "encryptedKeyData",
          "referenceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "encryptedKeyData": {
            "type": "string"
          },
          "certificateData": {
            "type": "string"
          },
          "notBefore": {
            "type": "string",
            "format": "date-time"
          },
          "notAfter": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RequestWrapperKeyMigrateBaseKeyRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/KeyMigrateBaseKeyRequestDto"
          }
        }
      },
      "KeyMigrateBaseKeyResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperKeyMigrateBaseKeyResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/KeyMigrateBaseKeyResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "LicenseKeyMappingDto": {
        "type": "object",
        "properties": {
          "tspId": {
            "type": "string"
          },
          "licenseKey": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RequestWrapperLicenseKeyMappingDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/LicenseKeyMappingDto"
          }
        }
      },
      "LicenseKeyMappingResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperLicenseKeyMappingResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/LicenseKeyMappingResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "LicenseKeyFetchResponseDto": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResponseWrapperLicenseKeyFetchResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/LicenseKeyFetchResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "LicenseKeyGenerationDto": {
        "type": "object",
        "properties": {
          "tspId": {
            "type": "string"
          },
          "licenseExpiryTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RequestWrapperLicenseKeyGenerationDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/LicenseKeyGenerationDto"
          }
        }
      },
      "LicenseKeyGenerationResponseDto": {
        "type": "object",
        "properties": {
          "licenseKey": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperLicenseKeyGenerationResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/LicenseKeyGenerationResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "JWTSignatureVerifyRequestDto": {
        "required": [
          "jwtSignatureData"
        ],
        "type": "object",
        "properties": {
          "jwtSignatureData": {
            "type": "string"
          },
          "actualData": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "certificateData": {
            "type": "string"
          },
          "validateTrust": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          }
        }
      },
      "RequestWrapperJWTSignatureVerifyRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/JWTSignatureVerifyRequestDto"
          }
        }
      },
      "JWTSignatureVerifyResponseDto": {
        "type": "object",
        "properties": {
          "signatureValid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "trustValid": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperJWTSignatureVerifyResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/JWTSignatureVerifyResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "JWTSignatureRequestDto": {
        "required": [
          "dataToSign"
        ],
        "type": "object",
        "properties": {
          "dataToSign": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "includePayload": {
            "type": "boolean"
          },
          "includeCertificate": {
            "type": "boolean"
          },
          "includeCertHash": {
            "type": "boolean"
          },
          "certificateUrl": {
            "type": "string"
          }
        }
      },
      "RequestWrapperJWTSignatureRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/JWTSignatureRequestDto"
          }
        }
      },
      "JWTSignatureResponseDto": {
        "type": "object",
        "properties": {
          "jwtSignedData": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperJWTSignatureResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/JWTSignatureResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "JWSSignatureRequestDto": {
        "required": [
          "dataToSign"
        ],
        "type": "object",
        "properties": {
          "dataToSign": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "includePayload": {
            "type": "boolean"
          },
          "includeCertificate": {
            "type": "boolean"
          },
          "includeCertHash": {
            "type": "boolean"
          },
          "certificateUrl": {
            "type": "string"
          },
          "validateJson": {
            "type": "boolean"
          },
          "b64JWSHeaderParam": {
            "type": "boolean"
          },
          "signAlgorithm": {
            "type": "string"
          }
        }
      },
      "RequestWrapperJWSSignatureRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/JWSSignatureRequestDto"
          }
        }
      },
      "ResponseWrapperZKKeyMigrateCertficateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/ZKKeyMigrateCertficateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ZKKeyMigrateCertficateResponseDto": {
        "type": "object",
        "properties": {
          "certificate": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PartnerCertDownloadResponeDto": {
        "type": "object",
        "properties": {
          "certificateData": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperPartnerCertDownloadResponeDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/PartnerCertDownloadResponeDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "KeyPairGenerateResponseDto": {
        "type": "object",
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certSignRequest": {
            "type": "string"
          },
          "issuedAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiryAt": {
            "type": "string",
            "format": "date-time"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperKeyPairGenerateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/KeyPairGenerateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RequestWrapperSymmetricKeyGenerateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/SymmetricKeyGenerateRequestDto"
          }
        }
      },
      "SymmetricKeyGenerateRequestDto": {
        "required": [
          "applicationId",
          "referenceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "force": {
            "type": "boolean"
          }
        }
      },
      "ResponseWrapperSymmetricKeyGenerateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/SymmetricKeyGenerateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "SymmetricKeyGenerateResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "KeyPairGenerateRequestDto": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "force": {
            "type": "boolean"
          },
          "commonName": {
            "type": "string"
          },
          "organizationUnit": {
            "type": "string"
          },
          "organization": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "RequestWrapperKeyPairGenerateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/KeyPairGenerateRequestDto"
          }
        }
      },
      "CSRGenerateRequestDto": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "commonName": {
            "type": "string"
          },
          "organizationUnit": {
            "type": "string"
          },
          "organization": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "RequestWrapperCSRGenerateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CSRGenerateRequestDto"
          }
        }
      },
      "CryptomanagerRequestDto": {
        "required": [
          "applicationId",
          "data",
          "timeStamp"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "string"
          },
          "salt": {
            "pattern": ".+\\S.*",
            "type": "string"
          },
          "aad": {
            "pattern": ".+\\S.*",
            "type": "string"
          },
          "prependThumbprint": {
            "type": "boolean",
            "deprecated": true
          }
        }
      },
      "RequestWrapperCryptomanagerRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CryptomanagerRequestDto"
          }
        }
      },
      "CryptomanagerResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperCryptomanagerResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/CryptomanagerResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "CryptoWithPinRequestDto": {
        "required": [
          "data",
          "userPin"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "userPin": {
            "type": "string"
          }
        }
      },
      "RequestWrapperCryptoWithPinRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CryptoWithPinRequestDto"
          }
        }
      },
      "CryptoWithPinResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperCryptoWithPinResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/CryptoWithPinResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RequestWrapperTpmSignVerifyRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/TpmSignVerifyRequestDto"
          }
        }
      },
      "TpmSignVerifyRequestDto": {
        "required": [
          "data",
          "publicKey",
          "signature"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "tpm": {
            "type": "boolean"
          }
        }
      },
      "ResponseWrapperTpmSignVerifyResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/TpmSignVerifyResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "TpmSignVerifyResponseDto": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean"
          }
        }
      },
      "RequestWrapperTpmSignRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/TpmSignRequestDto"
          }
        }
      },
      "TpmSignRequestDto": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperTpmSignResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/TpmSignResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "TpmSignResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      }
    }
  }
}