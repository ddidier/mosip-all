{
  "openapi": "3.0.1",
  "info": {
    "title": "Auth Manager Service",
    "description": "Rest Endpoints for operations related to auth",
    "license": {
      "name": "Mosip",
      "url": "https://docs.mosip.io/platform/license"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://dev2.mosip.net/v1/authmanager",
      "description": "Auth Manager Service"
    }
  ],
  "tags": [
    {
      "name": "authmanager",
      "description": "Operation related to Authentication and Authorization"
    }
  ],
  "paths": {
    "/validate/{appid}/{userid}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "This API will validate username",
        "description": "This API will validate username based on userid",
        "operationId": "validateUserName",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperValidationResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/usersaltdetails/{appid}": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to get list of users for a module with salt",
        "description": "API to get list of users for a module with salt",
        "operationId": "getUserDetailsWithSalt",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUserDetailsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperMosipUserSaltListDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/username/{appid}/{mobilenumber}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "This API will get username",
        "description": "This API will get username based on mobileno",
        "operationId": "getUsernameBasedOnMobileNumber",
        "parameters": [
          {
            "name": "mobilenumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperUserNameDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/userdetails/{appid}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "This API will fetch all users based on appId and roles",
        "description": "This API will fetch all users based on appId and roles for role bases search only pagination will work,Without role can be searched by all,email,firstName,lastName and userName",
        "operationId": "getUsersDetails",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageStart",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageFetch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperMosipUserListDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to get list of users for a module",
        "description": "API to get list of users for a module",
        "operationId": "getListOfUsersDetails",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUserDetailsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperMosipUserListDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/userdetail/{appid}/{mobilenumber}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "This API will get userdetails",
        "description": "This API will get userdetails based on mobileno",
        "operationId": "getUserDetailBasedOnMobileNumber",
        "parameters": [
          {
            "name": "mobilenumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperMosipUserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/userdetail/regid/{appid}": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "Gets the user detail based on user id",
        "description": "Gets the user detail based on user id",
        "operationId": "getUserDetailBasedOnUserId",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUserDetailsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperUserDetailsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user/addpassword": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "This API will add password to the user",
        "description": "This API will add password to the user",
        "operationId": "addPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUserPasswordRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperUserPasswordResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/unblock/{appid}/{userid}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to get username",
        "description": "API to get username from userid",
        "operationId": "getUserName",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthZResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/roles/{appid}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to get all roles",
        "description": "API to get all roles",
        "operationId": "getAllRoles",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperRolesListDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/role/{appId}/{userId}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "This API will get user role",
        "description": "This API will get user role useing appid and userid",
        "operationId": "getUserRole",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperUserRoleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/rid/{appid}/{userid}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to get rid",
        "description": "API to get rid from userid",
        "operationId": "getRId",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperRIdDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/resetpassword/{appid}": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "This API will reset the password of the particular user",
        "description": "This API will reset the password of the particular user",
        "operationId": "resetPassword",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperPasswordDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthZResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/logout/user": {
      "delete": {
        "tags": [
          "authmanager"
        ],
        "summary": "Logout a user",
        "description": "ends users session",
        "operationId": "logoutUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/login/{redirectURI}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "Login a user",
        "description": "internal api for auth code flow",
        "operationId": "login",
        "parameters": [
          {
            "name": "state",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirectURI",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/login-redirect/{redirectURI}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "Login a user",
        "description": "internal api for auth code flow",
        "operationId": "loginRedirect",
        "parameters": [
          {
            "name": "redirectURI",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session_state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/individualId/{appid}/{userid}": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "This API will fetch IndividualId based on appId and userId",
        "description": "This API will fetch IndividualId based on appId and userId",
        "operationId": "getIndividualId",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperIndividualIdDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/changepassword/{appid}": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "This API will change the password of the particular user",
        "description": "This API will change the password of the particular user",
        "operationId": "changePassword",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperPasswordDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthZResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authorize/validateToken": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to validate token",
        "description": "API to validate token",
        "operationId": "validateToken",
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperMosipUserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authorize/refreshToken/{appid}": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to retry token when access token expires",
        "description": "API to retry token when access token expires",
        "operationId": "refreshToken",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthNResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authorize/invalidateToken": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to invalidate token when both refresh and auth token expires",
        "description": "API to invalidate token when both refresh and auth token expires",
        "operationId": "invalidateToken",
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthNResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authorize/internal/refreshToken/{appid}": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "Internal API used by syncdata delegate API to refreah token",
        "description": "Internal API used by syncdata delegate API to refresh token",
        "operationId": "refreshAuthToken",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthNResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authorize/admin/validateToken": {
      "get": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to validate token",
        "description": "API to validate token",
        "operationId": "validateAdminToken",
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperMosipUserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authenticate/useridPwd": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "Authenticate using username and password",
        "description": "Authenticate using username and password",
        "operationId": "authenticateUseridPwd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperLoginUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthNResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/authenticate/useridOTP": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to validate OTP with user Id",
        "description": "API to validate OTP with user Id",
        "operationId": "userIdOTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUserOtp"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthNResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authenticate/sendotp": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "Authenticate using OTP",
        "description": "Authenticate using OTP",
        "operationId": "sendOTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperOtpUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthNResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authenticate/internal/userotp": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "Internal API used by syncdata delegate API to authenticate using otp",
        "description": "Internal API used by syncdata delegate API to authenticate using otp",
        "operationId": "getAllAuthTokensForOTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUserOtp"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthNResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authenticate/internal/useridPwd": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "Internal API used by syncdata delegate API to authenticate",
        "description": "Internal API used by syncdata delegate API to authenticate",
        "operationId": "getAllAuthTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperLoginUserWithClientId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthNResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/authenticate/clientidsecretkey": {
      "post": {
        "tags": [
          "authmanager"
        ],
        "summary": "API to authenticate using clientId and secretKey",
        "description": "API to authenticate using clientId and secretKey",
        "operationId": "clientIdSecretKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperClientSecret"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperAuthNResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ResponseWrapperValidationResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/ValidationResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ServiceError": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ValidationResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "RequestWrapperUserDetailsRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/UserDetailsRequestDto"
          }
        }
      },
      "UserDetailsRequestDto": {
        "type": "object",
        "properties": {
          "userDetails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MosipUserSalt": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "salt": {
            "type": "string"
          }
        }
      },
      "MosipUserSaltListDto": {
        "type": "object",
        "properties": {
          "mosipUserSaltList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MosipUserSalt"
            }
          }
        }
      },
      "ResponseWrapperMosipUserSaltListDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/MosipUserSaltListDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ResponseWrapperUserNameDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/UserNameDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "UserNameDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          }
        }
      },
      "MosipUserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "langCode": {
            "type": "string"
          },
          "userPassword": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "rid": {
            "type": "string"
          }
        }
      },
      "MosipUserListDto": {
        "type": "object",
        "properties": {
          "mosipUserDtoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MosipUserDto"
            }
          }
        }
      },
      "ResponseWrapperMosipUserListDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/MosipUserListDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ResponseWrapperMosipUserDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/MosipUserDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ResponseWrapperUserDetailsResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/UserDetailsResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "UserDetailsDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string"
          },
          "langCode": {
            "type": "string"
          },
          "userPassword": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "activationStatus": {
            "type": "boolean"
          },
          "blackListedStatus": {
            "type": "boolean"
          },
          "createdTimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "deletedTimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "zone": {
            "type": "string"
          },
          "registrationId": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "rid": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "UserDetailsResponseDto": {
        "type": "object",
        "properties": {
          "userDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDetailsDto"
            }
          }
        }
      },
      "RequestWrapperUserPasswordRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/UserPasswordRequestDto"
          }
        }
      },
      "UserPasswordRequestDto": {
        "required": [
          "appId",
          "password",
          "rid",
          "userName"
        ],
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "rid": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperUserPasswordResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/UserPasswordResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "UserPasswordResponseDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          }
        }
      },
      "AuthZResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperAuthZResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/AuthZResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ResponseWrapperRolesListDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/RolesListDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "roleDescription": {
            "type": "string"
          }
        }
      },
      "RolesListDto": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "ResponseWrapperUserRoleDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/UserRoleDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "UserRoleDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "RIdDto": {
        "type": "object",
        "properties": {
          "rid": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperRIdDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/RIdDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "PasswordDto": {
        "required": [
          "newPassword",
          "userId"
        ],
        "type": "object",
        "properties": {
          "oldPassword": {
            "pattern": "((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,})",
            "type": "string"
          },
          "newPassword": {
            "pattern": "((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,})",
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "hashAlgo": {
            "type": "string"
          }
        }
      },
      "RequestWrapperPasswordDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/PasswordDto"
          }
        }
      },
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperAuthResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/AuthResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "IndividualIdDto": {
        "type": "object",
        "properties": {
          "individualId": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperIndividualIdDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/IndividualIdDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RefreshTokenRequest": {
        "required": [
          "clientID",
          "clientSecret"
        ],
        "type": "object",
        "properties": {
          "clientID": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          }
        }
      },
      "AuthNResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperAuthNResponse": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/AuthNResponse"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "AuthNResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "expiryTime": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "refreshExpiryTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseWrapperAuthNResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/AuthNResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          }
        }
      },
      "RequestWrapperLoginUser": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/LoginUser"
          }
        }
      },
      "RequestWrapperUserOtp": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/UserOtp"
          }
        }
      },
      "UserOtp": {
        "required": [
          "appId",
          "otp",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "otp": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          }
        }
      },
      "OtpUser": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "otpChannel": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "appId": {
            "type": "string"
          },
          "useridtype": {
            "type": "string"
          },
          "templateVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "context": {
            "type": "string"
          }
        }
      },
      "RequestWrapperOtpUser": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/OtpUser"
          }
        }
      },
      "LoginUserWithClientId": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          }
        }
      },
      "RequestWrapperLoginUserWithClientId": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/LoginUserWithClientId"
          }
        }
      },
      "ClientSecret": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "secretKey": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          }
        }
      },
      "RequestWrapperClientSecret": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/ClientSecret"
          }
        }
      }
    }
  }
}