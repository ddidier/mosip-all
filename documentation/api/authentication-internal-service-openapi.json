{
  "openapi": "3.0.1",
  "info": {
    "title": "Id Authentication Internal Service",
    "description": "Id Authentication Internal Service",
    "license": {
      "name": "Mosip",
      "url": "https://docs.mosip.io/platform/license"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://dev.mosip.net/app/generic",
      "description": "Id Authentication Internal Service"
    }
  ],
  "tags": [
    {
      "name": "internal-update-auth-type-controller",
      "description": "Internal Update Auth Type Controller"
    },
    {
      "name": "signaturecontroller",
      "description": "Operation related to signature"
    },
    {
      "name": "cryptomanager",
      "description": "Operation related to Encryption and Decryption"
    },
    {
      "name": "master-data-update-event-controller",
      "description": "Master Data Update Event Controller"
    },
    {
      "name": "partner-ca-cert-event-controller",
      "description": "Partner CA Cert Event Controller"
    },
    {
      "name": "partnercertmanager",
      "description": "Operation related to partner certificate management"
    },
    {
      "name": "credential-issueance-callback-controller",
      "description": "Credential Issueance Callback Controller"
    },
    {
      "name": "internal-auth-txn-controller",
      "description": "Internal Auth Txn Controller"
    },
    {
      "name": "hotlist-event-controller",
      "description": "Hotlist Event Controller"
    },
    {
      "name": "partner-service-callback-controller",
      "description": "Partner Service Callback Controller"
    },
    {
      "name": "keymanager",
      "description": "Operation related to Keymanagement"
    },
    {
      "name": "internal-auth-controller",
      "description": "Internal Auth Controller"
    },
    {
      "name": "internal-otp-controller",
      "description": "Internal OTP Controller"
    }
  ],
  "paths": {
    "/verifyidentity": {
      "post": {
        "tags": [
          "internal-auth-controller"
        ],
        "summary": "Authenticate Internal Request",
        "description": "Authenticate Internal Request",
        "operationId": "authenticateInternal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Request authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdAuthenticationAppException"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/verifyCertificateTrust": {
      "post": {
        "tags": [
          "partnercertmanager"
        ],
        "summary": "To Upload Partner Certificate",
        "description": "To Upload Partner Certificate",
        "operationId": "verifyCertificateTrust",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCertificateTrustRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCertificateTrustResponeDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/validate": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to validate signature",
        "description": "Function to validate signature",
        "operationId": "validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperTimestampRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperValidatorResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/uploadPartnerCertificate": {
      "post": {
        "tags": [
          "partnercertmanager"
        ],
        "summary": "To Upload Partner Certificate",
        "description": "To Upload Partner Certificate",
        "operationId": "uploadPartnerCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperPartnerCertificateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperPartnerCertificateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/uploadOtherDomainCertificate": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Update signed certificate for the provided APP ID & REF ID for other domains",
        "description": "Update signed certificate for the provided APP ID & REF ID for other domains",
        "operationId": "uploadOtherDomainCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUploadCertificateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperUploadCertificateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/uploadCertificate": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Update signed certificate for the provided APP ID & REF ID",
        "description": "Update signed certificate for the provided APP ID & REF ID",
        "operationId": "uploadCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperUploadCertificateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperUploadCertificateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/uploadCACertificate": {
      "post": {
        "tags": [
          "partnercertmanager"
        ],
        "summary": "To Upload CA/Sub-CA certificates",
        "description": "To Upload CA/Sub-CA certificates",
        "operationId": "uploadCACertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCACertificateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCACertificateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/sign": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to sign response",
        "description": "Function to sign response",
        "operationId": "sign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperSignRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperSignResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": true
      }
    },
    "/revokeKey": {
      "put": {
        "tags": [
          "keymanager"
        ],
        "summary": "Request to Revoke Base Key for the provided APP ID & REF ID",
        "description": "Request to Revoke Base Key for the provided APP ID & REF ID",
        "operationId": "revokeKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperRevokeKeyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperRevokeKeyResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/pdf/sign": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to sign PDF",
        "description": "Function to sign PDF",
        "operationId": "signPDF",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperPDFSignatureRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperSignatureResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/otp": {
      "post": {
        "tags": [
          "internal-otp-controller"
        ],
        "summary": "generateOTP",
        "description": "generateOTP",
        "operationId": "generateOTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/jwtVerify": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to JWT Signature verification",
        "description": "Function to JWT Signature verification",
        "operationId": "jwtVerify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperJWTSignatureVerifyRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperJWTSignatureVerifyResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/jwtSign": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "TFunction to JWT sign datas",
        "description": "Function to JWT sign data",
        "operationId": "jwtSign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperJWTSignatureRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperJWTSignatureResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/jwsSign": {
      "post": {
        "tags": [
          "signaturecontroller"
        ],
        "summary": "Function to do JSON Web Signature(JWS) for the inputted data using inputted algorithm. Default Algorithm PS256.",
        "description": "Function to JWT sign data",
        "operationId": "jwsSign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperJWSSignatureRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperJWTSignatureResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/getPartnerCertificate/{partnerCertId}": {
      "get": {
        "tags": [
          "partnercertmanager"
        ],
        "summary": "To Download Partner Certificate",
        "description": "To Download Partner Certificate",
        "operationId": "getPartnerCertificate",
        "parameters": [
          {
            "name": "partnerCertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperPartnerCertDownloadResponeDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/getCertificate": {
      "get": {
        "tags": [
          "keymanager"
        ],
        "summary": "Request to get Certificate for the Provided APP ID & REF ID",
        "description": "Request to get Certificate for the Provided APP ID & REF ID",
        "operationId": "getCertificate",
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referenceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/generateSymmetricKey": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Request to Generate Symmetric key for the provided APP ID & REF ID",
        "description": "Request to Generate Symmetric key for the provided APP ID & REF ID",
        "operationId": "generateSymmetricKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperSymmetricKeyGenerateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperSymmetricKeyGenerateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/generateMasterKey/{objectType}": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Generate Master Key for the provided APP ID",
        "description": "Generate Master Key for the provided APP ID",
        "operationId": "generateMasterKey",
        "parameters": [
          {
            "name": "objectType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperKeyPairGenerateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/generateCSR": {
      "post": {
        "tags": [
          "keymanager"
        ],
        "summary": "Request to Generate CSR for the provided APP ID & REF ID along with other certificate params",
        "description": "Request to Generate CSR for the provided APP ID & REF ID along with other certificate params",
        "operationId": "generateCSR",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCSRGenerateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/encrypt": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Encrypt the data",
        "description": "Encrypt the data",
        "operationId": "encrypt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptomanagerRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptomanagerResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/encryptWithPin": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Encrypt the data with pin",
        "description": "Encrypt the data with pin",
        "operationId": "encryptWithPin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptoWithPinRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptoWithPinResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/encryptDt": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Encrypt the data & encrypt hash of the data with same session key",
        "description": "Encrypt the data & encrypt hash of the data with same session key",
        "operationId": "encryptDt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptomanagerRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptomanagerResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/decrypt": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Decrypt the data",
        "description": "Decrypt the data",
        "operationId": "decrypt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptomanagerRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptomanagerResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/decryptWithPin": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Decrypt the data with pin",
        "description": "Decrypt the data with pin",
        "operationId": "decryptWithPin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptoWithPinRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptoWithPinResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/decryptDt": {
      "post": {
        "tags": [
          "cryptomanager"
        ],
        "summary": "Decrypt the data & encrypt hash of the data with same session key",
        "description": "Decrypt the data & encrypt hash of the data with same session key",
        "operationId": "decryptDt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestWrapperCryptomanagerRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success or you may find errors in error array in response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWrapperCryptomanagerResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/callback/partnermanagement/policy_updated": {
      "post": {
        "tags": [
          "partner-service-callback-controller"
        ],
        "summary": "handlePolicyUpdated",
        "description": "handlePolicyUpdated",
        "operationId": "handlePolicyUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/partnermanagement/partner_updated": {
      "post": {
        "tags": [
          "partner-service-callback-controller"
        ],
        "summary": "handlePartnerApiKeyUpdated",
        "description": "handlePartnerApiKeyUpdated",
        "operationId": "handlePartnerUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/partnermanagement/partner_api_key_updated": {
      "post": {
        "tags": [
          "partner-service-callback-controller"
        ],
        "summary": "handlePartnerApiKeyUpdated",
        "description": "handlePartnerApiKeyUpdated",
        "operationId": "handlePartnerApiKeyUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/partnermanagement/misp_license_updated": {
      "post": {
        "tags": [
          "partner-service-callback-controller"
        ],
        "summary": "handleMispUpdatedEvent",
        "description": "handleMispUpdatedEvent",
        "operationId": "handleMispUpdatedEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/partnermanagement/misp_license_generated": {
      "post": {
        "tags": [
          "partner-service-callback-controller"
        ],
        "summary": "handleMispLicenseGeneratedEvent",
        "description": "handleMispLicenseGeneratedEvent",
        "operationId": "handleMispLicenseGeneratedEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/partnermanagement/ca_certificate": {
      "post": {
        "tags": [
          "partner-ca-cert-event-controller"
        ],
        "summary": "handleCACertificate",
        "description": "handleCACertificate",
        "operationId": "handleCACertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/partnermanagement/apikey_approved": {
      "post": {
        "tags": [
          "partner-service-callback-controller"
        ],
        "summary": "handleApiKeyApprovedEvent",
        "description": "handleApiKeyApprovedEvent",
        "operationId": "handleApiKeyApprovedEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/masterdata/titles": {
      "post": {
        "tags": [
          "master-data-update-event-controller"
        ],
        "summary": "handleMasterdataTitlesUpdate",
        "description": "handleMasterdataTitlesUpdate",
        "operationId": "handleMasterdataTitlesUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/masterdata/templates": {
      "post": {
        "tags": [
          "master-data-update-event-controller"
        ],
        "summary": "handleMasterdataTemplatesUpdate",
        "description": "handleMasterdataTemplatesUpdate",
        "operationId": "handleMasterdataTemplatesUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/idchange/remove_id/{partnerId}": {
      "post": {
        "tags": [
          "credential-issueance-callback-controller"
        ],
        "summary": "Event Notification Callback API",
        "description": "Event Notification Callback API",
        "operationId": "handleRemoveIdEvent",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Request authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdAuthenticationAppException"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/idchange/deactivate_id/{partnerId}": {
      "post": {
        "tags": [
          "credential-issueance-callback-controller"
        ],
        "summary": "Event Notification Callback API",
        "description": "Event Notification Callback API",
        "operationId": "handleDeactivateIdEvent",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Request authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdAuthenticationAppException"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/idchange/credential_issued/{partnerId}": {
      "post": {
        "tags": [
          "credential-issueance-callback-controller"
        ],
        "summary": "Event Notification Callback API",
        "description": "Event Notification Callback API",
        "operationId": "handleCredentialIssuedEvent",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Request authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdAuthenticationAppException"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/idchange/activate_id/{partnerId}": {
      "post": {
        "tags": [
          "credential-issueance-callback-controller"
        ],
        "summary": "Event Notification Callback API",
        "description": "Event Notification Callback API",
        "operationId": "handleActivateIdEvent",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Request authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdAuthenticationAppException"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/hotlist": {
      "post": {
        "tags": [
          "hotlist-event-controller"
        ],
        "summary": "handleHotlisting",
        "description": "handleHotlisting",
        "operationId": "handleHotlisting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/callback/authTypeCallback/{partnerId}": {
      "post": {
        "tags": [
          "internal-update-auth-type-controller"
        ],
        "summary": "updateAuthtypeStatus",
        "description": "updateAuthtypeStatus",
        "operationId": "updateAuthtypeStatus",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "internal-auth-controller"
        ],
        "summary": "Authenticate Internal Request",
        "description": "Authenticate Internal Request",
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Request authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdAuthenticationAppException"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/authTransactions/individualId/{ID}": {
      "get": {
        "tags": [
          "internal-auth-txn-controller"
        ],
        "summary": "Auth Transaction Request",
        "description": "Auth Transaction Request",
        "operationId": "getAuthTxnDetails",
        "parameters": [
          {
            "name": "IDType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageStart",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageFetch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "No Records Found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Request authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdAuthenticationAppException"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthRequestDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "individualId": {
            "type": "string"
          },
          "individualIdType": {
            "type": "string"
          },
          "transactionID": {
            "type": "string"
          },
          "requestTime": {
            "type": "string"
          },
          "specVersion": {
            "type": "string"
          },
          "thumbprint": {
            "type": "string"
          },
          "domainUri": {
            "type": "string"
          },
          "env": {
            "type": "string"
          },
          "request": {
            "$ref": "#/components/schemas/RequestDTO"
          },
          "consentObtained": {
            "type": "boolean"
          },
          "requestHMAC": {
            "type": "string"
          },
          "requestSessionKey": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "BioIdentityInfoDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataDTO"
          },
          "hash": {
            "type": "string"
          },
          "sessionKey": {
            "type": "string"
          },
          "specVersion": {
            "type": "string"
          },
          "thumbprint": {
            "type": "string"
          }
        }
      },
      "DataDTO": {
        "type": "object",
        "properties": {
          "digitalId": {
            "$ref": "#/components/schemas/DigitalId"
          },
          "bioType": {
            "type": "string"
          },
          "bioSubType": {
            "type": "string"
          },
          "bioValue": {
            "type": "string"
          },
          "deviceCode": {
            "type": "string"
          },
          "deviceServiceVersion": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "env": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "domainUri": {
            "type": "string"
          },
          "requestedScore": {
            "type": "number",
            "format": "float"
          },
          "qualityScore": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "DigitalId": {
        "type": "object",
        "properties": {
          "serialNo": {
            "type": "string"
          },
          "make": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deviceSubType": {
            "type": "string"
          },
          "deviceProvider": {
            "type": "string",
            "writeOnly": true
          },
          "dp": {
            "type": "string"
          },
          "dpId": {
            "type": "string"
          },
          "deviceProviderId": {
            "type": "string",
            "writeOnly": true
          },
          "dateTime": {
            "type": "string"
          }
        }
      },
      "IdentityDTO": {
        "type": "object",
        "properties": {
          "age": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "dobType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "gender": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "phoneNumber": {
            "type": "string"
          },
          "emailId": {
            "type": "string"
          },
          "addressLine1": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "addressLine2": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "addressLine3": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "location1": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "location2": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "location3": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "postalCode": {
            "type": "string"
          },
          "fullAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDTO"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "IdentityInfoDTO": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "RequestDTO": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "string"
          },
          "staticPin": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "demographics": {
            "$ref": "#/components/schemas/IdentityDTO"
          },
          "biometrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BioIdentityInfoDTO"
            }
          }
        }
      },
      "IdAuthenticationAppException": {
        "type": "object",
        "properties": {
          "cause": {
            "type": "object",
            "properties": {
              "stackTrace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classLoaderName": {
                      "type": "string"
                    },
                    "moduleName": {
                      "type": "string"
                    },
                    "moduleVersion": {
                      "type": "string"
                    },
                    "methodName": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "className": {
                      "type": "string"
                    },
                    "nativeMethod": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "suppressed": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "classLoaderName": {
                            "type": "string"
                          },
                          "moduleName": {
                            "type": "string"
                          },
                          "moduleVersion": {
                            "type": "string"
                          },
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "className": {
                            "type": "string"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              },
              "localizedMessage": {
                "type": "string"
              }
            }
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "classLoaderName": {
                  "type": "string"
                },
                "moduleName": {
                  "type": "string"
                },
                "moduleVersion": {
                  "type": "string"
                },
                "methodName": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "lineNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "className": {
                  "type": "string"
                },
                "nativeMethod": {
                  "type": "boolean"
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "actionMessage": {
            "type": "string"
          },
          "errorTexts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errorText": {
            "type": "string"
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "suppressed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stackTrace": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "classLoaderName": {
                        "type": "string"
                      },
                      "moduleName": {
                        "type": "string"
                      },
                      "moduleVersion": {
                        "type": "string"
                      },
                      "methodName": {
                        "type": "string"
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "lineNumber": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "className": {
                        "type": "string"
                      },
                      "nativeMethod": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "localizedMessage": {
                  "type": "string"
                }
              }
            }
          },
          "localizedMessage": {
            "type": "string"
          }
        }
      },
      "CertificateTrustRequestDto": {
        "required": [
          "certificateData",
          "partnerDomain"
        ],
        "type": "object",
        "properties": {
          "certificateData": {
            "type": "string"
          },
          "partnerDomain": {
            "type": "string"
          }
        }
      },
      "RequestWrapperCertificateTrustRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CertificateTrustRequestDto"
          }
        }
      },
      "CertificateTrustResponeDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          }
        }
      },
      "ResponseWrapperCertificateTrustResponeDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/CertificateTrustResponeDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ServiceError": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "RequestWrapperTimestampRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/TimestampRequestDto"
          }
        }
      },
      "TimestampRequestDto": {
        "required": [
          "data",
          "signature",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "signature": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperValidatorResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/ValidatorResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "ValidatorResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PartnerCertificateRequestDto": {
        "required": [
          "certificateData",
          "organizationName",
          "partnerDomain"
        ],
        "type": "object",
        "properties": {
          "certificateData": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "partnerDomain": {
            "type": "string"
          }
        }
      },
      "RequestWrapperPartnerCertificateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/PartnerCertificateRequestDto"
          }
        }
      },
      "PartnerCertificateResponseDto": {
        "type": "object",
        "properties": {
          "signedCertificateData": {
            "type": "string"
          },
          "certificateId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperPartnerCertificateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/PartnerCertificateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RequestWrapperUploadCertificateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/UploadCertificateRequestDto"
          }
        }
      },
      "UploadCertificateRequestDto": {
        "required": [
          "applicationId",
          "certificateData"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "certificateData": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperUploadCertificateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/UploadCertificateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "UploadCertificateResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CACertificateRequestDto": {
        "required": [
          "certificateData",
          "partnerDomain"
        ],
        "type": "object",
        "properties": {
          "certificateData": {
            "type": "string"
          },
          "partnerDomain": {
            "type": "string"
          }
        }
      },
      "RequestWrapperCACertificateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CACertificateRequestDto"
          }
        }
      },
      "CACertificateResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperCACertificateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/CACertificateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RequestWrapperSignRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/SignRequestDto"
          }
        }
      },
      "SignRequestDto": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperSignResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/SignResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "SignResponseDto": {
        "type": "object",
        "properties": {
          "signature": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RequestWrapperRevokeKeyRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/RevokeKeyRequestDto"
          }
        }
      },
      "RevokeKeyRequestDto": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "disableAutoGen": {
            "type": "boolean"
          }
        }
      },
      "ResponseWrapperRevokeKeyResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/RevokeKeyResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RevokeKeyResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PDFSignatureRequestDto": {
        "required": [
          "applicationId",
          "data",
          "reason",
          "timeStamp"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "lowerLeftX": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "lowerLeftY": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "upperRightX": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "upperRightY": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          },
          "pageNumber": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RequestWrapperPDFSignatureRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/PDFSignatureRequestDto"
          }
        }
      },
      "ResponseWrapperSignatureResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/SignatureResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "SignatureResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "OtpRequestDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "individualId": {
            "type": "string"
          },
          "individualIdType": {
            "type": "string"
          },
          "transactionID": {
            "type": "string"
          },
          "requestTime": {
            "type": "string"
          },
          "otpChannel": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "AuthError": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "MaskedResponseDTO": {
        "type": "object",
        "properties": {
          "maskedMobile": {
            "type": "string"
          },
          "maskedEmail": {
            "type": "string"
          }
        }
      },
      "OtpResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "transactionID": {
            "type": "string"
          },
          "responseTime": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthError"
            }
          },
          "response": {
            "$ref": "#/components/schemas/MaskedResponseDTO"
          }
        }
      },
      "JWTSignatureVerifyRequestDto": {
        "required": [
          "jwtSignatureData"
        ],
        "type": "object",
        "properties": {
          "jwtSignatureData": {
            "type": "string"
          },
          "actualData": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "certificateData": {
            "type": "string"
          },
          "validateTrust": {
            "type": "boolean"
          },
          "domain": {
            "type": "string"
          }
        }
      },
      "RequestWrapperJWTSignatureVerifyRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/JWTSignatureVerifyRequestDto"
          }
        }
      },
      "JWTSignatureVerifyResponseDto": {
        "type": "object",
        "properties": {
          "signatureValid": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "trustValid": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperJWTSignatureVerifyResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/JWTSignatureVerifyResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "JWTSignatureRequestDto": {
        "required": [
          "dataToSign"
        ],
        "type": "object",
        "properties": {
          "dataToSign": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "includePayload": {
            "type": "boolean"
          },
          "includeCertificate": {
            "type": "boolean"
          },
          "includeCertHash": {
            "type": "boolean"
          },
          "certificateUrl": {
            "type": "string"
          }
        }
      },
      "RequestWrapperJWTSignatureRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/JWTSignatureRequestDto"
          }
        }
      },
      "JWTSignatureResponseDto": {
        "type": "object",
        "properties": {
          "jwtSignedData": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperJWTSignatureResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/JWTSignatureResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "JWSSignatureRequestDto": {
        "required": [
          "dataToSign"
        ],
        "type": "object",
        "properties": {
          "dataToSign": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "includePayload": {
            "type": "boolean"
          },
          "includeCertificate": {
            "type": "boolean"
          },
          "includeCertHash": {
            "type": "boolean"
          },
          "certificateUrl": {
            "type": "string"
          },
          "validateJson": {
            "type": "boolean"
          },
          "b64JWSHeaderParam": {
            "type": "boolean"
          },
          "signAlgorithm": {
            "type": "string"
          }
        }
      },
      "RequestWrapperJWSSignatureRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/JWSSignatureRequestDto"
          }
        }
      },
      "PartnerCertDownloadResponeDto": {
        "type": "object",
        "properties": {
          "certificateData": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperPartnerCertDownloadResponeDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/PartnerCertDownloadResponeDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "KeyPairGenerateResponseDto": {
        "type": "object",
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certSignRequest": {
            "type": "string"
          },
          "issuedAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiryAt": {
            "type": "string",
            "format": "date-time"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseWrapperKeyPairGenerateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/KeyPairGenerateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "RequestWrapperSymmetricKeyGenerateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/SymmetricKeyGenerateRequestDto"
          }
        }
      },
      "SymmetricKeyGenerateRequestDto": {
        "required": [
          "applicationId",
          "referenceId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "force": {
            "type": "boolean"
          }
        }
      },
      "ResponseWrapperSymmetricKeyGenerateResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/SymmetricKeyGenerateResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "SymmetricKeyGenerateResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "KeyPairGenerateRequestDto": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "force": {
            "type": "boolean"
          },
          "commonName": {
            "type": "string"
          },
          "organizationUnit": {
            "type": "string"
          },
          "organization": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "RequestWrapperKeyPairGenerateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/KeyPairGenerateRequestDto"
          }
        }
      },
      "CSRGenerateRequestDto": {
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "commonName": {
            "type": "string"
          },
          "organizationUnit": {
            "type": "string"
          },
          "organization": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "RequestWrapperCSRGenerateRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CSRGenerateRequestDto"
          }
        }
      },
      "CryptomanagerRequestDto": {
        "required": [
          "applicationId",
          "data",
          "timeStamp"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "string"
          },
          "salt": {
            "pattern": ".+\\\\S.*",
            "type": "string"
          },
          "aad": {
            "pattern": ".+\\\\S.*",
            "type": "string"
          },
          "prependThumbprint": {
            "type": "boolean",
            "deprecated": true
          }
        }
      },
      "RequestWrapperCryptomanagerRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CryptomanagerRequestDto"
          }
        }
      },
      "CryptomanagerResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperCryptomanagerResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/CryptomanagerResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "CryptoWithPinRequestDto": {
        "required": [
          "data",
          "userPin"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "userPin": {
            "type": "string"
          }
        }
      },
      "RequestWrapperCryptoWithPinRequestDto": {
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "requesttime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "request": {
            "$ref": "#/components/schemas/CryptoWithPinRequestDto"
          }
        }
      },
      "CryptoWithPinResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "ResponseWrapperCryptoWithPinResponseDto": {
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "responsetime": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/CryptoWithPinResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceError"
            }
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/Type"
          },
          "timestamp": {
            "type": "string"
          },
          "dataShareUri": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "EventModel": {
        "type": "object",
        "properties": {
          "publisher": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "publishedOn": {
            "type": ̥
            "string"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "Type": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "scheme": "basic"
      }
    }
  }
}